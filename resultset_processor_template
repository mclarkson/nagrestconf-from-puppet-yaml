#!/bin/bash
#
# Synopsis:
#     Does something
#
# Expects
#     yaml_file_name\tlast_ran\thost_name
#
# For example:
#
# ./puppet_last_run_delta hostname | ./prune_results col_value_regex 1 "^tm01nag2201" | ./resultset_processor_template
#

if [[ -r config.conf ]]; then
    . config.conf
else
    echo "No config.conf file found"
    exit 1
fi

[[ $BRIEF -eq 0 ]] && echo -e "\n#\n# enable_server run started on `date`\n#\n"

# Check LOC list
[[ $BRIEF -eq 0 ]] && echo -n "Checking servers... "
theres_a_problem=0
for RESTSVR in $LOC ;do
    res=`curl $OPTS -sfkn 'https://'${RESTSVR%%,*}'/rest/show/hosts?json=\{"folder":"'${RESTSVR##*,}'","filter":"qWeRtY"\}'`
    [[ $? -ne 0 ]] && { 
        echo "Problem with:"
        echo "    curl $OPTS -fkn 'https://${RESTSVR%%,*}/rest/show/hosts?json=\{\"folder\":\"${RESTSVR##*,}\",\"filter\":\"qWeRtY\"\}'"
        exit 1
    }
done
[[ $theres_a_problem -eq 1 ]] && exit 1

[[ $BRIEF -eq 0 ]] && echo "OK."

# Borrow another script's cache
touch $ES_CACHEFILE

#
# Read in the work list from stdin
#

while IFS=`echo -en "\t"` read yaml lastrun hst nul; do
    workhost="$hst"
    [[ $STRIPDOM -eq 1 ]] && workhost="${workhost%%.*}"

    # Search for the workhost on all nagrestconf servers listed in LOC.
    # Use the value from the cache if there is one.
    found=0
    if grepline=`grep "^ *${workhost} " $ES_CACHEFILE`; then
        # Use the cache value
        RESTSVR="${grepline#* }"
        found=1
    else
        # Try REST to see where workhost lives
        for RESTSVR in $LOC ;do
            res=`curl $OPTS -skn 'https://'${RESTSVR%%,*}'/rest/show/hosts?json=\{"folder":"'${RESTSVR##*,}'","filter":"'${workhost}'"\}'`
            [[ $res != '[]' ]] && { found=1 ; break ; }
        done
        [[ $found -eq 1 ]] && {
            # Update the cache file
            sed -i "/^ *${workhost} /d" $ES_CACHEFILE
            echo "${workhost} $RESTSVR" >>$ES_CACHEFILE
        }
    fi

    # If workhost could not be found on any nagrestconf server
    # then found will be 0.

    if [[ $found -eq 1 ]]; then
        [[ $BRIEF -eq 0 ]] && echo "${workhost} found on $RESTSVR"
        echo "  DOING something to $workhost and making some output for cron"

        # A reading something GET
        curl $OPTS -skn 'https://'${RESTSVR%%,*}'/rest/show/services?json=\{"folder":"'${RESTSVR##*,}'","filter":"'${workhost}'"\}' \
            | $JSON -b | grep '\[[0-9]*,3,' | tr -d \" 

        # A changing something POST
        #curl $OPTS -sknX POST -d 'json={"folder":"'${RESTSVR##*,}'",
        #    "name":"'${workhost}'",
        #    "disable":"0"}' \
        #    https://${RESTSVR%%,*}/rest/modify/hosts

    else
        [[ $BRIEF -eq 0 ]] && echo "${workhost} not found"
    fi
done

exit 0

